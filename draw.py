import numpy as np
import matplotlib.pyplot as plt

data = [35037438.0, 34599288.0, 34171556.5, 33034247.5, 32205234.5, 32578096.5, 32664205.0, 32812362.0, 33040736.5, 33351358.5, 33891755.0, 34399608.0, 35082825.0, 35527251.5, 35979900.0, 36489092.5, 36930950.0, 37356159.5, 37516684.5, 36995382.0, 35894867.5, 35309454.5, 35130998.5, 35332301.0, 35484958.5, 35736146.0, 36263497.5, 36715621.0, 36307146.5, 35575306.5, 32775513.0, 32483095.0, 32273332.0, 32337601.0, 32435659.0, 31845827.5, 30623537.5, 30734013.5, 30648091.5, 30617198.5, 30691028.5, 30894140.5, 31237878.5, 31463887.5, 31866149.5, 32560316.5, 33217866.0, 33751135.0, 34187314.0, 34805243.5, 35099307.5, 34844176.0, 33872995.5, 33145066.0, 32840017.0, 32585317.5, 32259432.0, 32185939.5, 32395899.5, 32872689.0, 32433057.5, 33227610.5, 33474653.0, 33431312.0, 33310882.5, 33218970.0, 32742532.5, 31748747.5, 30418096.0, 30437292.0, 30484062.5, 30592375.0, 30832505.0, 31119267.5, 31475241.0, 31802614.0, 32211517.0, 32808784.5, 33100002.5, 33355414.5, 33798590.5, 34252187.0, 34592118.5, 34593791.0, 34117710.5, 33750876.0, 33500462.0, 33166535.0, 32663556.0, 32321444.5, 32770959.5, 32469091.0, 32685765.5, 33431062.0, 33845035.5, 33887170.5, 33649850.5, 33369703.5, 32967251.0, 32021329.5, 30545025.5, 30726951.5, 31057503.0, 31390159.0, 31767999.0, 32118840.0, 32336883.0, 32489398.0, 32712035.5, 33413210.5, 33890919.5, 34253204.0, 34714420.5, 35412450.5, 36261725.5, 36585065.5, 35988650.5, 35412420.5, 34689810.5, 33765728.0, 33256991.0, 32738871.0, 32136546.5, 31910451.0, 32189051.0, 32581381.5, 32672809.5, 32628729.5, 32553054.5, 32245591.0, 31815004.0, 31202885.0, 29916457.5, 30314410.0, 30687163.5, 31008178.0, 31226310.5, 31371225.5, 31667447.5, 31810283.5, 31802486.0, 32194374.5, 32603384.5, 33226782.0, 33933029.0, 34727866.5, 36006392.5, 36610384.5, 35397981.0, 34176322.0, 35029960.0, 34325278.5, 33771291.0, 33496968.5, 33484513.5, 33535510.5, 33576545.5, 33655071.0, 33586135.0, 33349418.5, 32953110.5, 32703349.5, 32629224.5, 32252564.0, 31046307.5, 31198414.5, 31397939.5, 31586661.5, 31827476.0, 32168034.0, 32484124.0, 32346049.0, 32047940.5, 32514921.0, 33071671.0, 33524291.0, 33760579.5, 33971624.0, 34917335.0, 35795345.5, 36071087.5, 36812962.5, 36359580.5, 36025460.5, 35833527.0, 35728363.5, 35701726.0, 36201866.5, 36888987.0, 37054838.0, 36993839.5, 36808796.5, 36520572.0, 36301622.5, 36237372.0, 35526897.5, 34653458.5, 34408484.5, 34381004.5, 34241591.0, 34169618.5, 34251762.5, 35283734.0, 35520411.5, 35584564.5, 35988619.0, 36348128.5, 36555890.0, 36436722.5, 35917614.0, 36820747.5, 35667866.5, 35638451.5, 37208574.5, 37492802.0, 37480674.5, 37429527.0, 37328603.5, 37145425.5, 37384378.5, 37856775.0, 37940463.5, 37888598.5, 37747389.0, 37681684.5, 37740155.5, 37802184.5, 36473853.0, 35322521.0, 34901297.0, 34874383.0, 34990442.5, 35213048.5, 35562100.0, 36746077.0, 37423423.0, 37641536.5, 37944570.5, 37844035.5, 37490403.5, 33272089.5, 33111608.0, 32835721.5, 32318715.0, 32273553.5, 33959152.0, 34269989.0, 34203690.5, 34166394.0, 34035500.0, 33848914.5, 33848251.5, 34227369.0, 34355063.5, 34480012.0, 34631027.0, 34807068.0, 34879551.5, 34869620.0, 33368605.5, 32092406.5, 31680593.0, 31654797.0, 31817743.5, 31933068.5, 32102290.0, 32699323.0, 33376242.0, 33419514.0, 33396832.5, 30525499.0, 30616215.0, 30679267.0, 30773841.0, 30926496.5, 30522052.0, 29690928.5, 30810576.5, 31002935.0, 30983497.5, 30977314.0, 31084941.0, 31246985.5, 31355301.5, 31755164.5, 32044555.5, 32235949.5, 32321244.0, 32248037.5, 32244843.0, 32268463.0, 31323615.5, 30185943.0, 29791121.5, 29733812.5, 29796312.0, 30061007.5, 30152840.0, 30124028.0, 30557043.5, 29881010.5, 30623950.5, 30757637.0, 30792107.0, 30961380.0, 31000192.0, 30787761.5, 30432044.0, 30050628.0, 31272571.0, 31810985.0, 31867776.5, 32058372.5, 32308586.0, 32525370.0, 32717553.0, 33107463.5, 33067592.5, 32874860.5, 32807746.0, 32773860.0, 32724293.5, 32581302.0, 32042693.0, 31191748.0, 30921464.5, 30867423.0, 30858667.0, 30753547.0, 30273145.5, 31794752.0, 32038318.0, 31995274.5, 32944431.5, 33313157.0, 33468934.0, 33296994.0, 32993921.0, 32705731.5, 32237960.0, 31497747.0, 32414434.5, 33196025.5, 33715985.0, 34140067.0, 34483341.5, 34552696.0, 34384077.5, 34435965.5, 34340955.5, 34121649.5, 33763072.5, 33503021.5, 33475626.0, 33437680.5, 33024307.5, 31980858.5, 31663923.0, 31532390.0, 31484276.5, 29899196.0, 30191462.5, 30665451.5, 31227037.5, 31535889.0, 32318725.0, 32580228.5, 32505401.5, 32286955.5, 31926085.0, 31789120.0, 32057929.5, 31482176.0, 32361172.0, 33212705.5, 33979078.0, 34420161.5, 34655409.5, 34784295.5, 34388830.0, 33841503.5, 33266024.5, 32780519.5, 32573596.5, 32548277.0, 32496264.0, 32325382.5, 31948840.0, 30598643.0, 30101037.0, 31590568.0, 31256276.0, 31072175.5, 31080960.0, 31340200.5, 31707581.0, 31791727.5, 32120306.5, 32241699.5, 32161318.5, 31939009.5, 31826716.5, 32169855.0, 33199593.5, 32829890.5, 33479520.5, 34076296.0, 34310695.0, 34299068.5, 34225699.0, 34284631.0, 34016034.0, 33549137.0, 33264321.0, 33217084.0, 33364880.5, 33328883.0, 33063122.5, 32872439.0, 32687817.0, 34350949.0, 33862439.0, 33156093.5, 32917045.0, 32936846.0, 33063753.0, 33432681.0, 33923154.5, 35109011.5, 35642917.0, 35830896.0, 35888381.0, 35957892.0, 35945818.5, 35999657.0, 36434606.5, 36024206.0, 36053090.0, 36251289.0, 36009758.0, 35698961.5, 35573604.0, 36279775.0, 36980427.0, 37132653.0, 37157376.0, 37065355.5, 36926013.5, 36423322.5, 35199998.0, 37465890.0, 35829193.5, 35102326.5, 35221172.0, 35180087.0, 35290365.5, 35523917.5, 35814958.0, 36287064.0, 36727333.0, 37597249.5, 38044052.5, 38310004.0, 38478046.5, 38627281.0, 38894075.5, 38852022.0, 38353145.0, 37408436.0, 37107743.0, 37124661.0, 37120589.0, 37189090.5, 37582650.0, 38591945.5, 39467731.5, 39559130.5, 39286419.5, 38798156.5, 38253832.5]

# 将 data 按每12个一组求和
# Assuming the provided data array has 480 elements
# Here, we'll create a random data array with 480 elements for demonstration purposes
# data = np.random.randint(0, 100, 480)  # Generating 480 random integers between 0 and 100

# Reshape the array into 40 groups of 12 each and sum each group
summed_data = np.sum(np.array(data).reshape(-1, 12), axis=1)

# # Plotting the histogram
# plt.hist(summed_data, bins=len(summed_data))
# plt.title('24-hour cumulative load diagram of 40 groups of satellites')
# plt.xlabel('Sum')
# plt.ylabel('Frequency')
# plt.show()

average_sum = np.mean(summed_data)

# Plotting each group's sum as a bar graph
group_numbers = np.arange(len(summed_data))  # Generating group numbers from 0 to 39
plt.bar(group_numbers, summed_data)
plt.axhline(y=average_sum, color='r', linestyle='-', label=f'Average: {average_sum:.2f}')
plt.title('Sum of Each Group (12 satellite per group)')
plt.xlabel('Group Number')
plt.ylabel('Sum')
plt.xticks(group_numbers)  # Set x-axis labels to group numbers
plt.legend()
plt.show()

